Ця програма дає змогу працювати із однозв'язними списками, двоз'язними списками, стеками та чергами. 

Ознайомимося з цим детальніше.

Стек  — різновид лінійного списку, структура даних, яка працює за принципом (дисципліною) «останній прийшов — перший пішов».

В програмі описані такі операції із стеками:

* pushBack («заштовхнути елемент»): елемент додається в стек та розміщується в його верхівці. Розмір стеку збільшується на одиницю. 

* pop («виштовхнути елемент»): отримує елемент з верхівки стеку. При цьому він видаляється зі стеку і його місце в верхівці стеку займає наступний за ним відповідно до правила LIFO(Last In, First Out), а розмір стеку зменшується на одиницю. 

Функції оголошені у файлі Stack.h, а їх опис у файлі Stack.cpp.

Щоб доступитися до цих функцій, в Source.cpp необхідно створити об'єкт типу  Stack, і доступатися до функцій через крапочку ("."). 

Клас Stack шаблонний (це означає, що ви можете задавати різні типи даних).

Черга (англ. queue) — динамічна структура даних, що працює за принципом «перший прийшов — перший пішов».

Операції із чергами такі ж як і з стеками, і доступаються до них аналогічно.

Функції оголошені у файлі Queue.h, а їх опис у файлі Queue.cpp.

Однозв'язний список — вид зв'язаного списку, який складається з вузлів, кожен з яких містить у собі данні (інформаційну частину) та посилання на наступний вузол.

В програмі описані такі операції із однозв'язними списками:

* pushBack - елемент додається в список та розміщується в його верхівці.

* pop - отримує елемент з верхівки списку.

* leftpop - видаляє перший елемент зліва. 

* clear - видаляє всі елементи списку.

* head_on_tail - міняє місцями перший елемент списку з останнім.

* remove - видаляє елемент списку, вибраний користувачем (користувач задає елемент який хоче видалити в одиничних лапках, наприклад pushback('4')).

* insert - вставляє елемент у список на певну позицію (користувач задає елемент(в одиничних лапках), який хоче вставити у список і номер позиції після якої цей елемент повинен стояти; наприклад insert ('T',1), внаслідок цієї функції елемент Т вставиться на 2 позицію у списку, при цьому розмір списку збільшиться на 1).

* reverse - розвертає список.

* sort - сортує список (методом швидкого сортування).

Також можливе додавання 2 списків.

Функції оголошені в файлі List.h, а їх опис у файлі List.cpp.

Доступаємося до цих функцій, так як і з чергами та стеками. 

Двозв'язний список — вид зв'язаного списку, у якому посилання в кожному вузлі вказують на попередній і на подальший вузол у списку.

Операції їз двозв'язними списками такі ж як із однозв'язними.

Функції описані в файлі Doubly_list.h, а їх опис у файлі Doubly_list.cpp.

